# -*- coding: utf-8 -*-
#
# ガチャの確率
#
# カードは「当り」と「外れ」に分けて考える
# 「当り」のものだけにレートを設定する
# (1.0 - 「当り」のカード確率合計) が外れを引く確率
# それを外れカードの数で等分したのが外れカード1つを引く確率にする
# あとは 0.0...1.0 の間で範囲をうめていく

require "pp"
require "rain_table"

# 入力値
box = [
  {:name => "剣SSR", :rate => 0.0001},
  {:name => "剣SR",  :rate => 0.001},
  {:name => "剣R",   :rate => 0.01},
  {:name => "棒1"},
  {:name => "棒2"},
]
tt box

# 準備
group1 = box.find_all{|e|e[:rate]} # ドロップ率の指定があるもの
group2 = box - group1              # ないもの

total = group1.collect{|e|e[:rate]}.reduce(:+)
other_rate = (1.0 - total) / group2.size

base = 0.0
box = box.collect{|e|
  rate = e[:rate] || other_rate
  e.merge("範囲" => (base ... (base + rate)), :rate => rate).tap { base += rate }
}

# ガチャる
N = 1000
N.times do
  r = rand
  card = box.find{|e|e["範囲"].include?(r)}
  card["ドロップ数"] ||= 0
  card["ドロップ数"] += 1
end

# 統計
box = box.collect{|card|
  rate2 = card["ドロップ数"].to_f / N
  diff = card[:rate] - rate2
  card.merge("実際の確率" => rate2, "確率差分" => diff)
}

tt box
# >> +-------+--------+
# >> | name  | rate   |
# >> +-------+--------+
# >> | 剣SSR | 0.0001 |
# >> | 剣SR  |  0.001 |
# >> | 剣R   |   0.01 |
# >> | 棒1   |        |
# >> | 棒2   |        |
# >> +-------+--------+
# >> +-------+---------+------------------+------------+------------------------+------------+
# >> | name  | rate    | 範囲             | 実際の確率 | 確率差分               | ドロップ数 |
# >> +-------+---------+------------------+------------+------------------------+------------+
# >> | 剣SSR |  0.0001 | 0.0...0.0001     |        0.0 |                 0.0001 |            |
# >> | 剣SR  |   0.001 | 0.0001...0.0011  |      0.001 |                    0.0 |          1 |
# >> | 剣R   |    0.01 | 0.0011...0.0111  |      0.012 |                 -0.002 |         12 |
# >> | 棒1   | 0.49445 | 0.0111...0.50555 |      0.488 |   0.006450000000000011 |        488 |
# >> | 棒2   | 0.49445 | 0.50555...1.0    |      0.499 | -0.0045499999999999985 |        499 |
# >> +-------+---------+------------------+------------+------------------------+------------+
